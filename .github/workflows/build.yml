name: Build binary file

on: 
  push:
    tags:
      - v*
    branches:
      - 'main'
    paths:
      - '**.py'
      - '**.yml'

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-latest, ubuntu-latest, macos-latest]
        include:
          - os: ubuntu-latest
            file-postfix: linux86_64
            vr-rep: |
              sed -i "s/<VERSION>/$(git describe --always)/" bot.py
              cat bot.py
          - os: macos-latest
            file-postfix: macos86_64
            vr-rep: |
              sed -i '.old' "s/<VERSION>/$(git describe --always)/" bot.py
              cat bot.py
          - os: windows-latest
            file-postfix: win10.exe
            vr-rep: |
              $version = $(git describe --always;)
              C:\"Program Files"\Git\usr\bin\sed.exe -i "s/<VERSION>/$version/" bot.py
              gc bot.py

    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - name: Set up Python '3.10'
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'
      - name: Replace version
        run: |
          ${{ matrix.vr-rep }}
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      - name: Build single binary
        run: |
          python build.py
      - name: Upload binary results
        uses: actions/upload-artifact@v3
        with:
          name: telegram-member-inviter-${{ matrix.file-postfix }}
          path: |
            dist/telegram-member-inviter-*
            dist/telegram-member-inviter-*.*
  release:

    needs: build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - run: git fetch --prune --unshallow
      - name: Setup env
        run: echo "BRANCH_LATEST_TAG=$(git describe --always)" >> $GITHUB_ENV
      - name: Download all build artifacts
        uses: actions/download-artifact@v3
      - name: Automatic release
        uses: marvinpinto/action-automatic-releases@latest
        with:
          repo_token: "${{ secrets.GITHUB_TOKEN }}"
          prerelease: false
          automatic_release_tag: ${{ env.BRANCH_LATEST_TAG }}
          files: |
            telegram-member-inviter-linux86_64
            telegram-member-inviter-macos86_64
            telegram-member-inviter-win10.exe
